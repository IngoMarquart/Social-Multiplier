%%%
% TEST
% % RolemodelDistance
% This function returns the shortest path between most central actors
% @param: G - The matrix returning distances
% @return: centralities - Returns a vector of centralities
%%%
classdef TestRolemodelDistance < matlab.unittest.TestCase
    properties (TestParameter)
        matrices=struct('Empty', ...
            [0,0,0,0; ...
            0,0,0,0; ...
            0,0,0,0; ...
            0,0,0,0], ...
            'SymPairs', ...
            [0,1,0,0; ...
            1,0,0,0; ...
            0,0,0,1; ...
            0,0,1,0], ...
            'SymCentral', ...
            [0,1,1,1; ...
            1,0,0,0; ...
            1,0,0,0; ...
            1,0,0,0], ...
            'TwoCentConn', ...
            [0,1,1,1,0,0,0,0; ...
             1,0,0,0,0,0,0,0; ...
             1,0,0,0,0,0,0,0; ...
             1,0,0,0,1,0,0,0; ...
             0,0,0,1,0,0,0,1; ...
             0,0,0,0,0,0,0,1; ...
             0,0,0,0,0,0,0,1; ...
             0,0,0,0,1,1,1,0], ...
            'TwoCentNoConn', ...
            [0,1,1,1,0,0,0,0; ...
             1,0,0,0,0,0,0,0; ...
             1,0,0,0,0,0,0,0; ...
             1,0,0,0,0,0,0,0; ...
             0,0,0,0,0,0,0,1; ...
             0,0,0,0,0,0,0,1; ...
             0,0,0,0,0,0,0,1; ...
             0,0,0,0,1,1,1,0])
        actualdistances=struct('Empty', Inf , ...
            'SymPairs', 1 , ...
            'SymCentral', 1, ...
            'TwoCentConn', 3,...
            'TwoCentNoConn', Inf )
    end
    methods (Test, ParameterCombination='sequential')
        function testInfluenceCentDirection(testCase, matrices, actualdistances)
            calcdistance=RolemodelDistance(matrices);
            testCase.verifyEqual(calcdistance,actualdistances);
        end
    end
end
